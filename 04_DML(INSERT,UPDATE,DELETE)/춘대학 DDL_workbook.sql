--TEST
--1)
CREATE TABLE TB_CATRGORY(
    NAME VARCHAR2(10),
    USE_YN VARCHAR2(1) DEFAULT 'Y'
);
SELECT * FROM TB_CATRGORY;


--2)
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR(5) PRIMARY KEY,
    NAME VARCHAR(10)
);

SELECT * FROM TB_CLASS_TYPE;

--3)
ALTER TABLE TB_CATRGORY ADD PRIMARY KEY(NAME);

--4)
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;

--5)
ALTER TABLE TB_CLASS_TYPE 
MODIFY NO VARCHAR(10)
MODIFY NAME VARCHAR(20); 

--6)
ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NO TO CLASS_TYPE_NO;

ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NAME TO CLASS_TYPE_NAME;

--7)

ALTER TABLE TB_CATRGORY
RENAME CONSTRAINT SYS_C007230 TO PK_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME CONSTRAINT SYS_C007229 TO PK_NO;

--8)
ALTER TABLE TB_CATRGORY MODIFY NAME VARCHAR(13);

INSERT INTO TB_CATRGORY VALUES ('공학','Y');
INSERT INTO TB_CATRGORY VALUES ('자연과학','Y');
INSERT INTO TB_CATRGORY VALUES ('의학','Y');
INSERT INTO TB_CATRGORY VALUES ('예체능','Y');
INSERT INTO TB_CATRGORY VALUES ('인문사회','Y');
COMMIT;

SELECT * FROM TB_CATRGORY;

--9)
ALTER TABLE TB_DEPARTMENT ADD FOREIGN KEY (CATEGORY) REFERENCES TB_CATRGORY(NAME);

--10)
CREATE OR REPLACE VIEW VW_STORIG
AS SELECT STUDENT_NO, STUDENT_NAME , STUDENT_ADDRESS
FROM TB_STUDENT;

SELECT * FROM VW_STORIG;

--11)
CREATE OR REPLACE VIEW VW_CO
AS SELECT STUDENT_NAME AS "학생이름" ,DEPARTMENT_NAME AS "학과명",PROFESSOR_NAME AS "지도교수"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
ORDER BY 학과명;

DROP VIEW VW_CO;

SELECT * FROM VW_CO;

SELECT * FROM TB_PROFESSOR;
SELECT * FROM TB_STUDENT;

--12)
CREATE OR REPLACE VIEW VW_SC
AS SELECT DEPARTMENT_NAME,COUNT(*)
FROM TB_STUDENT
JOIN DEPARTMENT USING (DEPARTMENT_NO);

SELECT DEPARTMENT_NAME "학과명",COUNT(DEPARTMENT_NAME)"학과별 학생 수 "
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
GROUP BY DEPARTMENT_NAME;

--13)

UPDATE VW_STORIG
SET STUDENT_NAME = '김상호'
WHERE STUDENT_NO = 'A213046';

SELECT * FROM VW_STORIG;

--14) VIEW 테이블 생성시 WITH READ ONLY 구문과 같이 생성한다.

CREATE OR REPLACE VIEW VW_STORIG
AS SELECT STUDENT_NO, STUDENT_NAME , STUDENT_ADDRESS
FROM TB_STUDENT
WITH READ ONLY;

--15) 과목번호 과목이름 누적수강생수
SELECT * FROM TB_CLASS;
SELECT * FROM TB_GRADE;

SELECT DISTINCT(CLASS_NO),CLASS_NAME,COUNT();

SELECT SUBSTR(TERM_NO,1,4),CLASS_NO
FROM TB_GRADE
WHERE SUBSTR(TERM_NO,1,4) IN ('2007','2008','2009');


SELECT CLASS_NO, CLASS_NAME
FROM TB_GRADE
JOIN TB_CLASS USING (CLASS_NO)
WHERE SUBSTR(TERM_NO,1,4) IN ('2005','2006','2007','2008','2009');

SELECT CLASS_NO AS "과목번호", CLASS_NAME  AS "과목이름",COUNT(CLASS_NO)AS "누적수강생수"
FROM (SELECT CLASS_NO, CLASS_NAME
FROM TB_GRADE
JOIN TB_CLASS USING (CLASS_NO)
WHERE SUBSTR(TERM_NO,1,4) IN ('2005','2006','2007','2008','2009'))
GROUP BY CLASS_NO,CLASS_NAME
ORDER BY 누적수강생수 DESC;

SELECT CLASS_NO AS "과목번호", CLASS_NAME  AS "과목이름",COUNT(CLASS_NO)AS "누적수강생수"
FROM ((SELECT CLASS_NO, CLASS_NAME
FROM TB_GRADE
JOIN TB_CLASS USING (CLASS_NO)
WHERE SUBSTR(TERM_NO,1,4) IN ('2005','2006','2007','2008','2009'))
GROUP BY CLASS_NO,CLASS_NAME
ORDER BY 누적수강생수 DESC)
WHERE ROWNUM <=3;


SELECT ROWNUM ,과목번호,과목이름,누적수강생수
FROM(SELECT CLASS_NO AS "과목번호", CLASS_NAME  AS "과목이름",COUNT(CLASS_NO)AS "누적수강생수"
FROM (SELECT CLASS_NO, CLASS_NAME
FROM TB_GRADE
JOIN TB_CLASS USING (CLASS_NO)
WHERE SUBSTR(TERM_NO,1,4) IN ('2005','2006','2007','2008','2009'))
GROUP BY CLASS_NO,CLASS_NAME
ORDER BY 누적수강생수 DESC)
WHERE ROWNUM <=3;

2006,2007,2008,2009 별 CLASS_NO를 뽑아서 카운트 CLASS_NO 과목명 반환


--STUDENT_NO 와 TERM_NO 를 가지고 STUDENT_NO 같고 TERM_NO가 다른경우 한번만 카운트 한다




