--실습문제--

--도서관리 프로그램을 만들기 위한 테이블을 만들기

--이때, 제약조건에 이름을 부여할 것

-- 각 컬럼에 주석달기


--1. 출판사들에 대한 데이터를 담기 위한 출판사 테이블(TB_PUBLISHER)

--컬럼: PUB_NO(출판사번호) --기본키(PUBLISHER_PK)

-- PUB_NAME(출판사명) --NOT NULL(PUBLICHSER_NN)

-- PHONE(출판사전화번호) --제약조건 없음

--3개 정도의 샘플 데이터 추가하기

CREATE TABLE TB_PUBLISHER(
    PUB_NO NUMBER  PRIMARY KEY ,
    PUB_NAME VARCHAR2(20)  NOT NULL,
    PHONE VARCHAR2(13)
);


COMMENT ON COLUMN TB_PUBLISHER.PUB_NO IS '출판사번호';
COMMENT ON COLUMN TB_PUBLISHER.PUB_NAME IS '출판사명';
COMMENT ON COLUMN TB_PUBLISHER.PHONE IS '출판사전화번호';

ALTER TABLE TB_PUBLISHER 
    RENAME CONSTRAINT SYS_C007239 TO PUBLISHER_PK;
ALTER TABLE TB_PUBLISHER 
    RENAME CONSTRAINT SYS_C007238 TO PUBLICHSER_NN;


--2. 도서들에 대한 데이터를 담기 위한 도서 테이블(TB_BOOK)

--컬럼: BK_NO(도서번호) --기본키(BOOK_PK)

-- BK_TITLE(도서명) --NOT NULL(BOOK_NN_TITLE)

-- BK_AUTHOR(저자명) --NOT NULL(BOOK_NN_AUTHOR)

-- BK_PRICE(가격)

-- BK_STOCK(재고) --기본값 1로 지정

-- BK_PUB_NO(출판사번호) --외래키(BOOK_FK)(TB_PUBLISHER 테이블을 참조하도록)

-- 이때 참조하고 있는 부모데이터 삭제 시 자식데이터도 삭제되도록 설정

--5개 정도의 샘플 데이터 추가하기

CREATE TABLE TB_BOOK(
    BK_NO NUMBER PRIMARY KEY,
    BK_TITLE VARCHAR2(30) NOT NULL,
    BK_AUTHOR VARCHAR2(30) NOT NULL,
    BK_PRICE NUMBER, 
    BK_STOCK NUMBER DEFAULT 1,
    BK_PUB_NO NUMBER REFERENCES TB_PUBLISHER(PUB_NO)ON DELETE CASCADE
);

COMMENT ON COLUMN TB_BOOK.BK_NO IS '도서번호';
COMMENT ON COLUMN TB_BOOK.BK_TITLE IS '도서명';
COMMENT ON COLUMN TB_BOOK.BK_AUTHOR IS '저자명';
COMMENT ON COLUMN TB_BOOK.BK_PRICE IS '가격';
COMMENT ON COLUMN TB_BOOK.BK_STOCK IS '재고';
COMMENT ON COLUMN TB_BOOK.BK_PUB_NO IS '출판사번호';

ALTER TABLE TB_BOOK
    RENAME CONSTRAINT SYS_C007261 TO BOOK_NN_TITLE;
ALTER TABLE TB_BOOK
    RENAME CONSTRAINT SYS_C007262 TO BOOK_NN_AUTHOR;
ALTER TABLE TB_BOOK
    RENAME CONSTRAINT SYS_C007263 TO BOOK_PK;
ALTER TABLE TB_BOOK
    RENAME CONSTRAINT SYS_C007264 TO BOOK_FK;

DROP TABLE  TB_BOOK CASCADE CONSTRAINT;

--3. 회원에 대한 데이터를 담기 위한 회원 테이블(TB_MEMBER)

--컬럼명: MEMBER_NO(회원번호) --기본키(MEMBER_PK)

-- MEMBER_ID(아이디) --중복금지(MEMBER_UQ)

--MEMBER_PWD(비밀번호) NOT NULL(MEMBER_NN_PWD)

--MEMBER_NAME(회원명) NOT NULL(MEMBER_NN_NAME)

--GENDER(성별) 'M' 또는 'F'로 입력되도록 제한(MEMBER_CK_GEN)

--ADDRESS(주소)

--PHONE(연락처)

--STATUS(탈퇴여부) --기본값으로 'N' 그리고 'Y' 혹은 'N'으로 입력되도록 제약조건(MEMBER_CK_STA)

--ENROLL_DATE(가입일) --기본값으로 SYSDATE, NOT NULL 조건(MEMBER_NN_EN)

--5개 정도의 샘플 데이터 추가하기

CREATE TABLE TB_MEMBER(
    MEMBER_NO NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(50) UNIQUE,
    MEMBER_PWD VARCHAR2(50) NOT NULL,
    MEMBER_NAME VARCHAR2(20) NOT NULL,
    GENDER VARCHAR2(1) CHECK(GENDER IN('M','F')),
    ADDRESS VARCHAR2(100),
    PHONE VARCHAR2(16),
    STATUS VARCHAR2(3) DEFAULT 'N' CHECK(STATUS IN ('Y','N')),
    ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL 
);

COMMENT ON COLUMN TB_MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_ID IS '아이디';
COMMENT ON COLUMN TB_MEMBER.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_NAME IS '회원명';
COMMENT ON COLUMN TB_MEMBER.GENDER IS '성별';
COMMENT ON COLUMN TB_MEMBER.ADDRESS IS '주소';
COMMENT ON COLUMN TB_MEMBER.PHONE IS '연락처';
COMMENT ON COLUMN TB_MEMBER.STATUS IS '탈퇴여부';
COMMENT ON COLUMN TB_MEMBER.ENROLL_DATE IS '가입일';

ALTER TABLE TB_MEMBER
    RENAME CONSTRAINT SYS_C007254 TO MEMBER_NN_PWD;
ALTER TABLE TB_MEMBER
    RENAME CONSTRAINT SYS_C007255 TO MEMBER_NN_NAME;
ALTER TABLE TB_MEMBER
    RENAME CONSTRAINT SYS_C007256 TO MEMBER_NN_EN;
ALTER TABLE TB_MEMBER
    RENAME CONSTRAINT SYS_C007257 TO MEMBER_CK_GEN;
ALTER TABLE TB_MEMBER
    RENAME CONSTRAINT SYS_C007258 TO MEMBER_CK_STA;
ALTER TABLE TB_MEMBER
    RENAME CONSTRAINT SYS_C007259 TO MEMBER_PK;
ALTER TABLE TB_MEMBER
    RENAME CONSTRAINT SYS_C007260 TO MEMBER_UQ;

--4. 도서를 대여한 회원에 대한 데이터를 담기 위한 대여목록 테이블(TB_RENT)

--컬럼:

--RENT_NO(대여번호) --기본키(RENT_PK)

--RENT_MEM_NO(대여회원번호) --외래키(RENT_FK_MEM) TB_MEMBER와 참조하도록

--이때 부모데이터 삭제 시 NULL값이 되도록 옵션 설정

--RENT_BOOK_NO(대여도서번호) --외래키(RENT_FK_BOOK) TB_BOOK와 참조하도록

--이때 부모데이터 삭제 시 NULL값이 되도록 옵션설정

--RENT_DATE(대여일) --기본값 SYSDATE

--샘플데이터 3개정도 추가하기

CREATE TABLE TB_RENT(
    RENT_NO NUMBER PRIMARY KEY,
    RENT_MEM_NO NUMBER,
    RENT_BOOK_NO NUMBER,
    RENT_DATE DATE DEFAULT SYSDATE
);

ALTER TABLE TB_RENT ADD FOREIGN KEY(RENT_MEM_NO) REFERENCES TB_MEMBER(MEMBER_NO)ON DELETE SET NULL;
ALTER TABLE TB_RENT ADD FOREIGN KEY(RENT_BOOK_NO) REFERENCES TB_BOOK(BK_NO)ON DELETE SET NULL;

COMMENT ON COLUMN TB_RENT.RENT_NO IS '대여번호';
COMMENT ON COLUMN TB_RENT.RENT_MEM_NO IS '대여회원번호';
COMMENT ON COLUMN TB_RENT.RENT_BOOK_NO IS '대여번서번호';
COMMENT ON COLUMN TB_RENT.RENT_DATE IS '대여일';


ALTER TABLE TB_RENT
    RENAME CONSTRAINT SYS_C007251 TO RENT_PK;
ALTER TABLE TB_RENT
    RENAME CONSTRAINT SYS_C007252 TO RENT_FK_MEM;
ALTER TABLE TB_RENT
    RENAME CONSTRAINT SYS_C007253 TO RENT_FK_BOOK;


--2번 도서를 대여한 회원의 이름, 아이디, 대여일, 반납예정일(대여일+7)을 조회하시오.

INSERT INTO TB_PUBLISHER VALUES(1,'1출판사','010-1111-1111');
INSERT INTO TB_PUBLISHER VALUES(2,'2출판사','010-1111-1112');
INSERT INTO TB_PUBLISHER VALUES(3,'3출판사','010-1111-1113');

SELECT * FROM TB_PUBLISHER;

INSERT INTO TB_BOOK VALUES(01,'1책','1저자',100,1,1);
INSERT INTO TB_BOOK VALUES(02,'2책','2저자',200,2,2);
INSERT INTO TB_BOOK VALUES(03,'3책','3저자',300,3,3);
INSERT INTO TB_BOOK VALUES(04,'4책','4저자',400,DEFAULT,2);
INSERT INTO TB_BOOK VALUES(05,'5책','5저자',500,DEFAULT,1);

UPDATE TB_BOOK
SET BK_STOCK = 1
WHERE BK_NO = 02;

SELECT * FROM TB_BOOK;

INSERT INTO TB_MEMBER 
VALUES(002,'1ID','1PASS','1회원','M','미국텍사스','010-1111-1111',DEFAULT,DEFAULT);

INSERT INTO TB_MEMBER 
VALUES(003,'3ID','2PASS','2회원','M','일본','010-2222-1111',DEFAULT,'2020-01-08');

INSERT INTO TB_MEMBER 
VALUES(004,'2ID','3PASS','3회원','M','페루','010-3333-1111',DEFAULT,'1998-07-28');

INSERT INTO TB_MEMBER 
VALUES(005,'4ID','4PASS','4회원','F','한국','010-4444-1111',DEFAULT,'2021-01-28');

INSERT INTO TB_MEMBER 
VALUES(001,'5ID','5PASS','5회원','M','독일','010-5555-1111',DEFAULT,DEFAULT);

SELECT * FROM TB_RENT;
SELECT * FROM TB_MEMBER;
SELECT * FROM TB_BOOK;

INSERT INTO TB_RENT
VALUES(001,1,2,'2020-09-11');
INSERT INTO TB_RENT
VALUES(002,1,5,'2006-09-11');
INSERT INTO TB_RENT
VALUES(003,1,4,'2007-09-11');

SELECT MEMBER_NAME AS "이름",MEMBER_ID AS "아이디 ",RENT_DATE AS "대여일",RENT_DATE+7 AS "반납예정일"
FROM TB_RENT
JOIN TB_MEMBER ON (RENT_MEM_NO = MEMBER_NO)
JOIN TB_BOOK ON (RENT_BOOK_NO = BK_PUB_NO)
WHERE BK_NO = 02;

--2번 도서를 대여한 회원의 이름, 아이디, 대여일, 반납예정일(대여일+7)을 조회하시오.


